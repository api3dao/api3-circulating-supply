{
  "address": "0x5Af02b1071614f962A7A6aE02503fe3f453a3fA7",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "vestingAddresses",
          "type": "address[]"
        }
      ],
      "name": "SetVestingAddresses",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "API3_POOL",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "API3_TOKEN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PRIMARY_TREASURY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SECONDARY_TREASURY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TIMELOCK_MANAGER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TIMELOCK_MANAGER_REVERSIBLE",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "V1_TREASURY",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "api3Pool",
      "outputs": [
        {
          "internalType": "contract IApi3Pool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "api3Token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCirculatingSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLockedByGovernance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLockedRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalLockedRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLockedVestings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalLockedVestings",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimelocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalLocked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_vestingAddresses",
          "type": "address[]"
        }
      ],
      "name": "setVestingAddresses",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelockManager",
      "outputs": [
        {
          "internalType": "contract ITimelockManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "vestingAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x94d920dc1d130d7f6efe7bd8b6c2e5909d1d08c606c464305f258ee185db96af",
  "receipt": {
    "to": null,
    "from": "0x915C0B8e03d8F6B2a18E6032eDd896061Db40A31",
    "contractAddress": "0x5Af02b1071614f962A7A6aE02503fe3f453a3fA7",
    "transactionIndex": 186,
    "gasUsed": "1056983",
    "logsBloom": "0x
    "blockHash": "0x5217a40b1ec4fd3565d6468b02dee5b12f6bca349c1675a4b71e651f6c8bbcec",
    "transactionHash": "0x94d920dc1d130d7f6efe7bd8b6c2e5909d1d08c606c464305f258ee185db96af",
    "logs": [
      {
        "transactionIndex": 186,
        "blockNumber": 13146814,
        "transactionHash": "0x94d920dc1d130d7f6efe7bd8b6c2e5909d1d08c606c464305f258ee185db96af",
        "address": "0x5Af02b1071614f962A7A6aE02503fe3f453a3fA7",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000915c0b8e03d8f6b2a18e6032edd896061db40a31"
        ],
        "data": "0x",
        "logIndex": 201,
        "blockHash": "0x5217a40b1ec4fd3565d6468b02dee5b12f6bca349c1675a4b71e651f6c8bbcec"
      }
    ],
    "blockNumber": 13146814,
    "cumulativeGasUsed": "11406090",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "29b52349bfff889f9d7d4ca41848682f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"vestingAddresses\",\"type\":\"address[]\"}],\"name\":\"SetVestingAddresses\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"API3_POOL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"API3_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRIMARY_TREASURY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SECONDARY_TREASURY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIMELOCK_MANAGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIMELOCK_MANAGER_REVERSIBLE\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"V1_TREASURY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"api3Pool\",\"outputs\":[{\"internalType\":\"contract IApi3Pool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"api3Token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCirculatingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLockedByGovernance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLockedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalLockedRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLockedVestings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalLockedVestings\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimelocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_vestingAddresses\",\"type\":\"address[]\"}],\"name\":\"setVestingAddresses\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelockManager\",\"outputs\":[{\"internalType\":\"contract ITimelockManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vestingAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Api3CirculatingSupply.sol\":\"Api3CirculatingSupply\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\"},\"contracts/Api3CirculatingSupply.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/IApi3Pool.sol\\\";\\nimport \\\"./interfaces/ITimelockManager.sol\\\";\\n\\ncontract Api3CirculatingSupply is Ownable {\\n    event SetVestingAddresses(address[] vestingAddresses);\\n\\n    address public constant API3_TOKEN =\\n        0x0b38210ea11411557c13457D4dA7dC6ea731B88a;\\n    address public constant API3_POOL =\\n        0x6dd655f10d4b9E242aE186D9050B68F725c76d76;\\n    address public constant TIMELOCK_MANAGER =\\n        0xFaef86994a37F1c8b2A5c73648F07dd4eFF02baA;\\n    address public constant TIMELOCK_MANAGER_REVERSIBLE =\\n        0x310BBf92A36031F778C32FEaCa458251FD36F451;\\n    address public constant V1_TREASURY =\\n        0xe7aF7c5982e073aC6525a34821fe1B3e8E432099;\\n    address public constant PRIMARY_TREASURY =\\n        0xD9F80Bdb37E6Bad114D747E60cE6d2aaF26704Ae;\\n    address public constant SECONDARY_TREASURY =\\n        0x556ECbb0311D350491Ba0EC7E019c354D7723CE0;\\n\\n    IERC20 public immutable api3Token;\\n    IApi3Pool public immutable api3Pool;\\n    ITimelockManager public immutable timelockManager;\\n    address[] public vestingAddresses;\\n\\n    constructor() {\\n        api3Token = IERC20(API3_TOKEN);\\n        api3Pool = IApi3Pool(API3_POOL);\\n        timelockManager = ITimelockManager(TIMELOCK_MANAGER);\\n    }\\n\\n    function setVestingAddresses(address[] memory _vestingAddresses)\\n        external\\n        onlyOwner()\\n    {\\n        vestingAddresses = _vestingAddresses;\\n        emit SetVestingAddresses(_vestingAddresses);\\n    }\\n\\n    function getCirculatingSupply() external view returns (uint256) {\\n        return api3Token.totalSupply() - getTotalLocked();\\n    }\\n\\n    function getTotalLocked() public view returns (uint256) {\\n        return getTimelocked() + getLockedByGovernance();\\n    }\\n\\n    function getTimelocked() public view returns (uint256) {\\n        return getLockedRewards() + getLockedVestings();\\n    }\\n\\n    function getLockedByGovernance()\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        // The reversible timelock manager funds are treated as being locked by\\n        // governance because they are not stakeable and are governed over by\\n        // DAOv1\\n        return api3Token.balanceOf(V1_TREASURY) +\\n            api3Token.balanceOf(PRIMARY_TREASURY) +\\n            api3Token.balanceOf(SECONDARY_TREASURY) + \\n            api3Token.balanceOf(TIMELOCK_MANAGER_REVERSIBLE);\\n    }\\n\\n    function getLockedRewards()\\n        public\\n        view\\n        returns (uint256 totalLockedRewards)\\n    {\\n        uint256 currentEpoch = block.timestamp / api3Pool.EPOCH_LENGTH();\\n        uint256 oldestLockedEpoch = currentEpoch -\\n            api3Pool.REWARD_VESTING_PERIOD() +\\n            1;\\n        if (oldestLockedEpoch < api3Pool.genesisEpoch() + 1) {\\n            oldestLockedEpoch = api3Pool.genesisEpoch() + 1;\\n        }\\n        for (\\n            uint256 indEpoch = currentEpoch;\\n            indEpoch >= oldestLockedEpoch;\\n            indEpoch--\\n        ) {\\n            IApi3Pool.Reward memory lockedReward = api3Pool.epochIndexToReward(\\n                indEpoch\\n            );\\n            if (lockedReward.atBlock != 0) {\\n                totalLockedRewards += lockedReward.amount;\\n            }\\n        }\\n    }\\n\\n    function getLockedVestings()\\n        public\\n        view\\n        returns (uint256 totalLockedVestings)\\n    {\\n        for (\\n            uint256 indVesting = 0;\\n            indVesting < vestingAddresses.length;\\n            indVesting++\\n        ) {\\n            ITimelockManager.Timelock memory timelock = timelockManager\\n            .timelocks(vestingAddresses[indVesting]);\\n            if (block.timestamp <= timelock.releaseStart) {\\n                totalLockedVestings += timelock.totalAmount;\\n            } else if (block.timestamp >= timelock.releaseEnd) {\\n                continue;\\n            } else {\\n                uint256 totalTime = timelock.releaseEnd - timelock.releaseStart;\\n                uint256 passedTime = block.timestamp - timelock.releaseStart;\\n                uint256 unlocked = (timelock.totalAmount * passedTime) /\\n                    totalTime;\\n                totalLockedVestings += timelock.totalAmount - unlocked;\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b477354af27fdd4e8c786cf477ec5d850bd30fdc6f9360fc90bfff8802e1bef\",\"license\":\"MIT\"},\"contracts/interfaces/IApi3Pool.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\ninterface IApi3Pool {\\n    struct Reward {\\n        uint32 atBlock;\\n        uint224 amount;\\n        uint256 totalSharesThen;\\n        uint256 totalStakeThen;\\n    }\\n\\n    function EPOCH_LENGTH() external view returns (uint256);\\n\\n    function REWARD_VESTING_PERIOD() external view returns (uint256);\\n\\n    function genesisEpoch() external view returns (uint256);\\n\\n    function epochIndexToReward(uint256) external view returns (Reward memory);\\n}\\n\",\"keccak256\":\"0xb1adc5c5267ef1705f349ea680c8ede7adf67b2e99edd95d542ac3744355cb0a\",\"license\":\"MIT\"},\"contracts/interfaces/ITimelockManager.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity 0.8.6;\\n\\ninterface ITimelockManager {\\n    struct Timelock {\\n        uint256 totalAmount;\\n        uint256 remainingAmount;\\n        uint256 releaseStart;\\n        uint256 releaseEnd;\\n    }\\n\\n    function timelocks(address) external view returns (Timelock memory);\\n}\\n\",\"keccak256\":\"0xa2dfb1ffbf6b5bbe41a5fdc7753c758841259bc9c86f7d7de3f6ed99d5d002ff\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e060405234801561001057600080fd5b5061001a3361008b565b7f0b38210ea11411557c13457d4da7dc6ea731b88a0000000000000000000000006080527f6dd655f10d4b9e242ae186d9050b68f725c76d7600000000000000000000000060a0527ffaef86994a37f1c8b2a5c73648f07dd4eff02baa00000000000000000000000060c0526100db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60805160601c60a05160601c60c05160601c6111bc6101606000396000818161028f0152610403015260008181610209015281816105fe0152818161069d01528181610745015281816107e801526108a70152600081816101e201528181610353015281816109eb01528181610a9601528181610b410152610bec01526111bc6000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80638da5cb5b116100b8578063bf5669bd1161007c578063bf5669bd1461028a578063d6899ae4146102b1578063e0364dd2146102cc578063f2fde38b146102e7578063f4732da6146102fa578063f9352eed1461030257600080fd5b80638da5cb5b14610233578063907d6e2714610244578063a90fc3831461024c578063b0c78ea814610254578063b77c38bf1461026f57600080fd5b80634c67f4de116100ff5780634c67f4de146101c0578063566890d9146101d5578063613d517d146101dd5780636fe2a2d714610204578063715018a61461022b57600080fd5b80630d427b721461013c5780630e5b4f0d1461016c5780632b112e4914610187578063344e58d31461019d5780633dbe51d0146101a5575b600080fd5b61014f61014a366004610f94565b61031d565b6040516001600160a01b0390911681526020015b60405180910390f35b61014f73d9f80bdb37e6bad114d747e60ce6d2aaf26704ae81565b61018f610347565b604051908152602001610163565b61018f6103f1565b61014f73faef86994a37f1c8b2a5c73648f07dd4eff02baa81565b6101d36101ce366004610e2e565b610578565b005b61018f6105f9565b61014f7f000000000000000000000000000000000000000000000000000000000000000081565b61014f7f000000000000000000000000000000000000000000000000000000000000000081565b6101d361096d565b6000546001600160a01b031661014f565b61018f6109a3565b61018f6109bf565b61014f73e7af7c5982e073ac6525a34821fe1b3e8e43209981565b61014f736dd655f10d4b9e242ae186d9050b68f725c76d7681565b61014f7f000000000000000000000000000000000000000000000000000000000000000081565b61014f73556ecbb0311d350491ba0ec7e019c354d7723ce081565b61014f73310bbf92a36031f778c32feaca458251fd36f45181565b6101d36102f5366004610e0c565b610c82565b61018f610d1d565b61014f730b38210ea11411557c13457d4da7dc6ea731b88a81565b6001818154811061032d57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000610351610d1d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103aa57600080fd5b505afa1580156103be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e29190610fad565b6103ec91906110fb565b905090565b6000805b6001548110156105745760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631369a927600184815481106104435761044361115a565b60009182526020909120015460405160e083901b6001600160e01b03191681526001600160a01b03909116600482015260240160806040518083038186803b15801561048e57600080fd5b505afa1580156104a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c69190610f4e565b9050806040015142116104e65780516104df90846110a2565b9250610560565b806060015142106104f75750610562565b60008160400151826060015161050d91906110fb565b9050600082604001514261052191906110fb565b905060008282856000015161053691906110dc565b61054091906110ba565b84519091506105509082906110fb565b61055a90876110a2565b95505050505b505b8061056c81611129565b9150506103f5565b5090565b6000546001600160a01b031633146105ab5760405162461bcd60e51b81526004016105a290611013565b60405180910390fd5b80516105be906001906020840190610d7f565b507f20d5cc5c404f7bcf167ea08ea1136482041e05e5641946d3e3de6690a23fbe39816040516105ee9190610fc6565b60405180910390a150565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ac4746ab6040518163ffffffff1660e01b815260040160206040518083038186803b15801561065557600080fd5b505afa158015610669573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068d9190610fad565b61069790426110ba565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635856130a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106f457600080fd5b505afa158015610708573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072c9190610fad565b61073690836110fb565b6107419060016110a2565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b70e6be66040518163ffffffff1660e01b815260040160206040518083038186803b15801561079c57600080fd5b505afa1580156107b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d49190610fad565b6107df9060016110a2565b811015610885577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b70e6be66040518163ffffffff1660e01b815260040160206040518083038186803b15801561083f57600080fd5b505afa158015610853573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108779190610fad565b6108829060016110a2565b90505b815b81811061096757604051634091fd3f60e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634091fd3f9060240160806040518083038186803b1580156108f157600080fd5b505afa158015610905573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109299190610ee2565b805190915063ffffffff1615610954576020810151610951906001600160e01b0316866110a2565b94505b508061095f81611112565b915050610887565b50505090565b6000546001600160a01b031633146109975760405162461bcd60e51b81526004016105a290611013565b6109a16000610d2f565b565b60006109ad6103f1565b6109b56105f9565b6103ec91906110a2565b6040516370a0823160e01b815273310bbf92a36031f778c32feaca458251fd36f45160048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610a3557600080fd5b505afa158015610a49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6d9190610fad565b6040516370a0823160e01b815273556ecbb0311d350491ba0ec7e019c354d7723ce060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610ae057600080fd5b505afa158015610af4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b189190610fad565b6040516370a0823160e01b815273d9f80bdb37e6bad114d747e60ce6d2aaf26704ae60048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610b8b57600080fd5b505afa158015610b9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc39190610fad565b6040516370a0823160e01b815273e7af7c5982e073ac6525a34821fe1b3e8e43209960048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610c3657600080fd5b505afa158015610c4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6e9190610fad565b610c7891906110a2565b6109b591906110a2565b6000546001600160a01b03163314610cac5760405162461bcd60e51b81526004016105a290611013565b6001600160a01b038116610d115760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a2565b610d1a81610d2f565b50565b6000610d276109bf565b6109b56109a3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610dd4579160200282015b82811115610dd457825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610d9f565b506105749291505b808211156105745760008155600101610ddc565b80356001600160a01b0381168114610e0757600080fd5b919050565b600060208284031215610e1e57600080fd5b610e2782610df0565b9392505050565b60006020808385031215610e4157600080fd5b823567ffffffffffffffff80821115610e5957600080fd5b818501915085601f830112610e6d57600080fd5b813581811115610e7f57610e7f611170565b8060051b9150610e90848301611071565b8181528481019084860184860187018a1015610eab57600080fd5b600095505b83861015610ed557610ec181610df0565b835260019590950194918601918601610eb0565b5098975050505050505050565b600060808284031215610ef457600080fd5b610efc611048565b825163ffffffff81168114610f1057600080fd5b815260208301516001600160e01b0381168114610f2c57600080fd5b6020820152604083810151908201526060928301519281019290925250919050565b600060808284031215610f6057600080fd5b610f68611048565b825181526020830151602082015260408301516040820152606083015160608201528091505092915050565b600060208284031215610fa657600080fd5b5035919050565b600060208284031215610fbf57600080fd5b5051919050565b6020808252825182820181905260009190848201906040850190845b818110156110075783516001600160a01b031683529284019291840191600101610fe2565b50909695505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6040516080810167ffffffffffffffff8111828210171561106b5761106b611170565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561109a5761109a611170565b604052919050565b600082198211156110b5576110b5611144565b500190565b6000826110d757634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156110f6576110f6611144565b500290565b60008282101561110d5761110d611144565b500390565b60008161112157611121611144565b506000190190565b600060001982141561113d5761113d611144565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122064469e27dd4b42eebe1a99babe6ce3a5aac1f2bb203e3dc4eb7d21c3a6a66a4964736f6c63430008060033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Api3CirculatingSupply.sol:Api3CirculatingSupply",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 248,
        "contract": "contracts/Api3CirculatingSupply.sol:Api3CirculatingSupply",
        "label": "vestingAddresses",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      }
    }
  }
}